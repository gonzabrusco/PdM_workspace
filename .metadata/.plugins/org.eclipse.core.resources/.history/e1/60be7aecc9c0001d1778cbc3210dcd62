/*
 * API_uart.c
 *
 *  Created on: Mar 12, 2023
 *      Author: gonza
 */

#include <stdint.h>
#include <string.h>
#include "API_uart.h"
#include "stm32f4xx_hal.h"
#include "stm32f4xx_hal_uart.h"

static UART_HandleTypeDef uartHandle;

bool_t uartInit() {
	uartHandle.Instance = USART3;
	uartHandle.BaudRate = 9600;
	uartHandle.WordLength = UART_WORDLENGTH_8B;
	uartHandle.StopBits = UART_STOPBITS_1;
	uartHandle.Parity = UART_PARITY_ODD;
	uartHandle.Mode = UART_MODE_TX_RX;
	uartHandle.HwFlowCtl = UART_HWCONTROL_NONE;
	uartHandle.OverSampling = UART_OVERSAMPLING_16;

	if(HAL_UART_Init(&uartHandle) != HAL_OK) {
		return false;
	}
	return true;
}

void uartSendString(const uint8_t * pstring) {
	// Calculo de timeout:
	// UART Baudrate = Bits por segundo
	// Entonces 9600 bauds por segundo = 9600 bits por segundo => 1/9600 segundos por bit = 1000/9600 milisegundos por bit.
	// 1 caracter del string = 10 bits en UART (8 bits del char + 1 partity + 1 stop)
	// Entonces el timeout va a ser = strlen(pstring) * 10 * 1000 / baudrate + 10 (10 ms extra de seguridad).
	uint16_t length = strlen(pstring);
	HAL_UART_Transmit(&uartHandle, pstring, length, length*10000/uartHandle.BaudRate + 10);
}

void uartSendStringSize(const uint8_t * pstring, uint16_t size) {

}

void uartReceiveStringSize(uint8_t * pstring, uint16_t size) {

}
